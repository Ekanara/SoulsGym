bases_by_pattern:
  # A
  GameDataMan: 
    pattern: \x48\x8B\x05....\x48\x85\xC0..\x48\x8b\x40.\xC3
  # B
  WorldChrMan: 
    pattern: \x48\x8B\x1D...\x04\x48\x8B\xF9\x48\x85\xDB..\x8B\x11\x85\xD2..\x8D
  # C
  GameMan:
    pattern: \x48\x8B\x05....\x48\x8B\x80\x60\x0C\x00\x00
  # D
  FieldArea:
    pattern: \x48\x8B\x0D....\x48\x85\xC9\x74\x26\x44\x8B
  GameFlagData:
    pattern: \x48\x8B\x0D....\x44\x0F\xB6\xCB\x41\xB8\x07\x00\x00\x00\x8B\xD6
  # DebugFlags
  WorldChrManDbg_Flags:
    pattern: \x4C\x8D\x05....\x48\x8D\x15....\x48\x8B\xCB\xE8....\x48\x83\x3D....\x00
  LockTgtMan:
    pattern: \x48\x8B\x0D....\xE8....\x48\x8B\xD8\x48\x85\xC0\x0F\x84....\xC7
  CSWindow:
    pattern: \x48\x8B\x0D....\x48\x85\xC9\x74.\x48\x83\xC1.\x48\x8D\x45

bases:
  Cam: 0x04796298
  Iudex: 0x475A7A8 # old
  Vordt: 0x475A7A8
addresses:
  PlayerHP:
    base: WorldChrMan
    offsets: [0x80, 0x1F90, 0x18, 0xD8]
    type_hint: int
  PlayerMaxHP:
    base: WorldChrMan
    offsets: [0x80, 0x1F90, 0x18, 0xDC]
    type_hint: int
  PlayerSP:
    base: WorldChrMan
    offsets: [0x80, 0x1F90, 0x18, 0xF0]
    type_hint: int
  PlayerMaxSP:
    base: WorldChrMan
    offsets: [0x80, 0x1F90, 0x18, 0xF4]
    type_hint: int
  # Player angle. Positions follow 12 bytes later with x, z, y
  PlayerA:  
    base: WorldChrMan
    offsets: [0x40, 0x28, 0x74]
    type_hint: float
  PlayerX: 
    base: WorldChrMan
    offsets: [0x40, 0x28, 0x80]
    type_hint: float
  PlayerAnimation: 
    base: WorldChrMan
    offsets: [0x80, 0x1F90, 0x28, 0x898]
    type_hint: str
  PlayerAnimationTime:
    base: WorldChrMan
    offsets: [0x80, 0x1F90, 0x10, 0x24]
    type_hint: float
  PlayerAnimationMaxTime:
    base: WorldChrMan
    offsets: [0x80, 0x1F90, 0x10, 0x2C]
    type_hint: float
  PlayerStats:
    # Vigor, Attunement, Endurance, Strength, Dexterity, Intelligence, Faith, Luck, Padding, Padding, Vitality, Soul Level
    # All stats are 4 bytes long, and are stored in the same order as above
    base: GameDataMan
    offsets: [0x10, 0x44]
    type_hint: int
  PlayerFrostResistance:
    base: WorldChrMan
    offsets: [0x80, 0x1F90, 0x18, 0x1F0]
    type_hint: int  # Absolute value
  PlayerFrostResistanceMax:
    base: WorldChrMan
    offsets: [0x80, 0x1F90, 0x18, 0x204]
    type_hint: int  # Absolute
  PlayerFrostEffect:
    base: GameDataMan
    offsets: [0x10, 0x1E4]
    type_hint: float  # Relative, from 1 to 0
  TargetFreeze: [0x18, 0x20]
  CamQx: [0x10, 0x568, 0x110]
  CamQz: [0x10, 0x568, 0x114]
  CamQy: [0x10, 0x568, 0x118]
  CameraX: [0x60, 0x60, 0x90]
  CameraY: [0x60, 0x60, 0x98]
  CameraZ: [0x60, 0x60, 0x94]
  LoSLockOnTime: [0x2910]
  LockOnBonusRange: [0x2914]
  noGravity: [0x80, 0x1a08]  # Bit 6 saves the gravity flag
  LockOn:
    base: LockTgtMan
    offsets: [0x2821]
    type_hint: byte
  LastBonfire: [0xACC]
  PlayerNoDeath: [0x0]
  PlayerDeathCount: [0x98]
  Time: [0xA4]
  GlobalSpeed: [0x80, 0x1F90, 0x28, 0xA58]
  WindowScreenWidth:
    base: CSWindow
    offsets: [0xB0]
    type_hint: int
  WindowScreenHeight:
    base: CSWindow
    offsets: [0xB4]
    type_hint: int
  ScreenMode:
    base: CSWindow
    offsets: [0xC0]
    type_hint: int
  CoiledSword: [0x0, 0x5A0F]
  EnableWarps: [0x0, 0xF03]
  UntendedGravesFlag:
    base: WorldChrMan
    offsets: [0x7D8, 0x8, 0x64]  # WorldChrMan -> WorldBlockChr -> WorldBlockInfo -> stuff for each map
    type_hint: byte
  # Iudex addresses
  IudexHP: [0x0, 0x320, 0x0, 0x1F90, 0x18, 0xD8]
  IudexMaxHP: [0x0, 0x320, 0x0, 0x1F90, 0x18, 0xE0]
  IudexAnimation: [0x0, 0x320, 0x0, 0x1F90, 0x28, 0x898]
  IudexAnimationTime: [0x0, 0x320, 0x0, 0x1F90, 0x10, 0x24]
  IudexAnimationMaxTime: [0x0, 0x320, 0x0, 0x1F90, 0x10, 0x2C]
  IudexAttackID: [0x0, 0x320, 0x0, 0x58, 0x320, 0x7428]  # SABlend drop in
  IudexPoseX: [0x0, 0x320, 0x0, 0x1F90, 0x68, 0x80]
  IudexPoseY: [0x0, 0x320, 0x0, 0x1F90, 0x68, 0x88]
  IudexPoseZ: [0x0, 0x320, 0x0, 0x1F90, 0x68, 0x84]
  IudexPoseA: [0x0, 0x320, 0x0, 0x1F90, 0x68, 0x74]
  IudexAttacks: [0x0, 0x320, 0x0, 0x0, 0x1EE8]
  IudexFlags:
    base: GameFlagData
    offsets: [0x0, 0x5A67]  # Bit 7 saves the defeat flagF
    type_hint: byte
  # Vordt addresses
  VordtHP: [0x0, 0x4C8, 0x0, 0x1F90, 0x18, 0xD8]
  VordtMaxHP: [0x0, 0x4C8, 0x0, 0x1F90, 0x18, 0xDC]
  VordtPoseA: [0x0, 0x4C8, 0x0, 0x1F90, 0x68, 0x74]
  VordtPoseX: [0x0, 0x4C8, 0x0, 0x1F90, 0x68, 0x80]
  VordtAnimation: [0x0, 0x4C8, 0x0, 0x1F90, 0x28, 0x898]
  VordtAttackID: [0x0, 0x4C8, 0x0, 0x58, 0x320, 0x7428]  # SABlend drop in
  VordtFlags:
    base: GameFlagData
    offsets: [0x0, 0xF67]
    type_hint: byte
  VordtAttacks: [0x0, 0x4C8, 0x0, 0x0, 0x1EE8]